=begin

  @File Name                            :mcms_authentication_generator.rb

	@Company Name                         :Mindfire Solutions Pvt. Ltd.

	@Creator Name                         :Indranil Mukherjee

	@Date Created                         :2012-06-14

  @Date Modified                        :2012-06-25

  @Last Modification Details            :Making it as mcms project standard

  @Purpose                              :This file is responsible to install mcms_authentication module in other application/module

=end

class McmsAuthenticationGenerator < Rails::Generators::NamedBase
  source_root File.expand_path('../templates', __FILE__)

  desc "Installing MCMS_AUTHENTICATION"

  #  @Params                               : No parameter
  #  @Returns                              : Nothing is returned 
  #  @Purpose                              : Copies all the migrations

  def add_migrations

    copy_file "migrate/20120605112804_devise_create_users.rb", "db/migrate/20120605112804_devise_create_users.rb"
    copy_file "migrate/20120608104637_create_roles.rb", "db/migrate/20120608104637_create_roles.rb"
    copy_file "migrate/20120608140424_create_roles_users.rb", "db/migrate/20120608140424_create_roles_users.rb"
    copy_file "migrate/20120612050932_create_plugins.rb", "db/migrate/20120612050932_create_plugins.rb"
    copy_file "migrate/20120625114340_create_existing_models.rb", "db/migrate/20120625114340_create_existing_models.rb"
  end

  #  @Params                               : No parameter
  #  @Returns                              : Nothing is returned 
  #  @Purpose                              : Copies all the libraries required

  def copy_core_libraries

   # copy_file "asset_manager.rb", "lib/asset_manager.rb" # may be required later

    copy_file "models.rb", "lib/mcms_authentication/models.rb" # module logic

  end

  #  @Params                               : No parameter
  #  @Returns                              : Nothing is returned
  #  @Purpose                              : Configurations are done here
  
  def configure

    insert_into_file File.join('app/controllers', 'application_controller.rb'), :after => "ActionController::Base\n" do
      '#  The following snippet is responsible for rescuing from exception generated by CanCan gem
                  #  for denying a particular module access with a notice to user and redirecting to root_url
                  rescue_from CanCan::AccessDenied do |exception|

                       flash[:error] = t(:access_denied,:default => "You are not authorized for doing this operation")
                  redirect_to root_url

                  end

          #end of configuration

      '
    end

    append_to_file File.join('db', 'seeds.rb') do
      " #writting seeds \n

               User.create!(:email => 'admin@mcms.com' ,:password => 'admin123' )\n
                Role.create!(:title => 'superuser')\n

                u = User.find_by_email('admin@mcms.com')\n

                r = Role.find_by_title('superuser')\n

                RolesUser.create!(:user_id => u.id , :role_id => r.id)\n
      "

    end

    insert_into_file File.join('config', 'application.rb'), :after => "Rails::Application\n" do

      ' # Writting configurations
              config.to_prepare do


                Devise::SessionsController.layout "users/devise"
                Devise::PasswordsController.layout "users/devise"

              end

             # Custom directories with classes and modules you want to be autoloadable.
              config.autoload_paths += %W(#{config.root}/lib)

              config.autoload_paths += Dir["#{config.root}/lib/**/"]
      '
    end

  end

  #  @Params                               : No parameter
  #  @Returns                              : Nothing is returned 
  #  @Purpose                              : Final instructions for developers who will use the gem

  def prompt_user

    say "\ndon't forget to run the following \n
          bundle install\n
          rake db:migrate\n
          rake db:seed\n

          in the controllers where you want to apply auth\n

          prepend_before_filter :authenticate_user!  \n

          load_and_authorize_resource  \n

          Enjoy!\n\n"
  end

  
end
